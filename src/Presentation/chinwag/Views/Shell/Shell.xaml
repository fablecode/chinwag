<controls:MetroWindow x:Class="chinwag.Views.Shell"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:local="clr-namespace:chinwag.Views"
                      xmlns:vms="clr-namespace:chinwag.ViewModels"
                      mc:Ignorable="d"
                      Title="Chinwag"
                      WindowState="Maximized"
                      WindowStyle="None"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:prism="http://prismlibrary.com/">

    <!--<controls:MetroWindow.DataContext>
        <vms:ShellViewModel/>
    </controls:MetroWindow.DataContext>-->

    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands ShowSeparators="False" Visibility="{Binding IsBackButtonVisible, Mode=OneWay, ConverterParameter=Reverse, Converter={StaticResource BoolToVisibility}}">
            <Button x:Name="GoBackButton"
                    Width="{Binding ElementName=HamburgerMenuControl, Path=CompactPaneLength}"
                    AutomationProperties.Name="Go back"
                    Command="{Binding GoBackCommand}">
                <controls:FontIcon AutomationProperties.Name="Go back icon"
                                   FontSize="14"
                                   Glyph="&#xE72B;" />
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>

    <controls:MetroWindow.Resources>

        <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type vms:MenuItem}">
            <Grid Height="48">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:HamburgerMenu}}, Path=CompactPaneLength, Mode=OneWay}" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ContentControl Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{Binding Icon}"
                        Focusable="False" />
                <TextBlock Grid.Column="1"
                   VerticalAlignment="Center"
                   FontSize="16"
                   Text="{Binding Label}" />
            </Grid>
        </DataTemplate>

        <Style BasedOn="{StaticResource {x:Type Frame}}" TargetType="{x:Type Frame}">
            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />
            <Setter Property="ClipToBounds" Value="True" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <controls:TransitioningContentControl Content="{Binding}"
                                                  RestartTransitionOnContentChange="True"
                                                  Transition="Custom">
                            <controls:TransitioningContentControl.CustomVisualStates>
                                <VisualState x:Name="CustomTransition">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Storyboard.TargetName="CurrentContentPresentationSite"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.150" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Storyboard.TargetName="CurrentContentPresentationSite"
                                                   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="200" />
                                            <SplineDoubleKeyFrame KeySpline="0.1, 0.9, 0.2, 1"
                                            KeyTime="00:00:00.300"
                                            Value="0" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Storyboard.TargetName="PreviousContentPresentationSite"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </controls:TransitioningContentControl.CustomVisualStates>
                        </controls:TransitioningContentControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </controls:MetroWindow.Resources>

    <Grid>
        <controls:HamburgerMenu x:Name="HamburgerMenuControl"
                                DisplayMode="CompactInline"
                                IsPaneOpen="False"
                                ItemTemplate="{StaticResource MenuItemTemplate}"
                                ItemsSource="{Binding Menu}"
                                ItemCommand="{Binding MenuItemInvokedCommand}"
                                SelectedItem="{Binding SelectedMenuItem, Mode=TwoWay}"
                                OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                                OptionsItemsSource="{Binding OptionsMenu}"
                                Content="{Binding HamburgerMenuContent}">
            <!--  Header  -->
            <controls:HamburgerMenu.HamburgerMenuHeaderTemplate>
                <DataTemplate>
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Foreground="White"
                               Text="{Binding ElementName=HamburgerMenuControl, Path=SelectedItem.Label}" />
                </DataTemplate>
            </controls:HamburgerMenu.HamburgerMenuHeaderTemplate>
        </controls:HamburgerMenu>
    </Grid>
</controls:MetroWindow>
